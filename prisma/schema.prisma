generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Book {
  id          String      @id @default(uuid())
  title       String
  author      String
  image       String      @default("")
  resume      String      @db.Text
  description String      @db.Text
  price       Decimal
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id])
  stock       Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cartItem    CartItem[]
  orderItem   OrderItem[]
}

model Category {
  id    String @id @default(uuid())
  name  String
  books Book[]
}

model Cart {
  id     String     @id @default(uuid())
  userId String     @unique
  user   User       @relation(fields: [userId], references: [id])
  items  CartItem[]
}

model CartItem {
  id       String @id @default(uuid())
  cartId   String
  cart     Cart   @relation(fields: [cartId], references: [id])
  bookId   String
  book     Book   @relation(fields: [bookId], references: [id])
  quantity Int
}

model Order {
  id          String      @id @default(uuid())
  userId      String      @unique
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
  totalAmount Float
  status      String
}

model OrderItem {
  id       String @id @default(uuid())
  orderId  String
  order    Order  @relation(fields: [orderId], references: [id])
  bookId   String
  book     Book   @relation(fields: [bookId], references: [id])
  quantity Int
}

enum Roles {
  ADMIN
  CLIENT
}

model User {
  id       String @id @default(uuid())
  name     String
  role     Roles  @default(CLIENT)
  image    String @default("")
  email    String @unique
  password String
  cart     Cart?
  order    Order?
}
